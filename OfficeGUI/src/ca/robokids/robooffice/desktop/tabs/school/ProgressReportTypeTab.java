/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.robokids.robooffice.desktop.tabs.school;

import ca.robokids.exception.BadFieldException;
import ca.robokids.exception.DatabaseException;
import ca.robokids.robooffice.desktop.customSwing.ReportSectionPanel;
import ca.robokids.robooffice.desktop.loaders.FontsLoader;
import ca.robokids.robooffice.desktop.tabs.Tab;
import ca.robokids.robooffice.desktop.util.PopupMessage;
import ca.robokids.robooffice.entity.schoolmetadata.ProgressReportType;
import ca.robokids.robooffice.entity.schoolmetadata.ReportCardCommentTemplate;
import ca.robokids.robooffice.logic.schoolsettings.SchoolManager;
import java.awt.CardLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JPanel;

/**
 *
 * @author Coldsoft
 */
public class ProgressReportTypeTab extends javax.swing.JPanel implements Tab{

   /**
    * Creates new form ProgressReportTypeTab
    */
   
   DefaultListModel<ProgressReportType> reportTypeModel = new DefaultListModel();
   ReportSectionPanel section1;
   ReportSectionPanel section2;
   ReportSectionPanel section3;
   ReportSectionPanel section4;
   
   ProgressReportType current;
   
   public ProgressReportTypeTab() {
      initComponents();
      initialize();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        center = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstReports = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        display = new javax.swing.JPanel();
        header = new javax.swing.JPanel();
        displayHeader = new javax.swing.JPanel();
        lblProgressReportName = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblMaxScore = new javax.swing.JLabel();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        editHeader = new javax.swing.JPanel();
        lblProgressReport = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtReportName = new javax.swing.JTextField();
        spinMaxScore = new com.toedter.components.JSpinField();
        jScrollPane2 = new javax.swing.JScrollPane();
        sectionsPanel = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        center.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lstReports.setFont(FontsLoader.getListFont());
        lstReports.setModel(reportTypeModel);
        lstReports.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstReportsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstReports);

        jLabel1.setFont(FontsLoader.getStaticLabelFont());
        jLabel1.setText("Progress Reports");

        btnAdd.setFont(FontsLoader.getButtonFont());
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        header.setLayout(new java.awt.CardLayout());

        lblProgressReportName.setFont(FontsLoader.getDynamicLabelFont());
        lblProgressReportName.setText("Progress report name:");

        jLabel3.setFont(FontsLoader.getStaticLabelFont());
        jLabel3.setText("Max Score:");

        lblMaxScore.setFont(FontsLoader.getDynamicLabelFont());
        lblMaxScore.setText("maxScore");

        btnEdit.setFont(FontsLoader.getButtonFont());
        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setFont(FontsLoader.getButtonFont());
        btnDelete.setForeground(new java.awt.Color(255, 0, 0));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout displayHeaderLayout = new javax.swing.GroupLayout(displayHeader);
        displayHeader.setLayout(displayHeaderLayout);
        displayHeaderLayout.setHorizontalGroup(
            displayHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblProgressReportName, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMaxScore, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                .addComponent(btnEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addContainerGap())
        );
        displayHeaderLayout.setVerticalGroup(
            displayHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEdit)
                        .addComponent(btnDelete))
                    .addGroup(displayHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(lblMaxScore))
                    .addComponent(lblProgressReportName))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        header.add(displayHeader, "display");

        lblProgressReport.setFont(FontsLoader.getStaticLabelFont());
        lblProgressReport.setText("Progress report name:");

        jLabel4.setFont(FontsLoader.getStaticLabelFont());
        jLabel4.setText("Max Score:");

        btnSave.setFont(FontsLoader.getButtonFont());
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setFont(FontsLoader.getButtonFont());
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        txtReportName.setFont(FontsLoader.getTextFieldFont());

        spinMaxScore.setFont(FontsLoader.getTextFieldFont());
        spinMaxScore.setMaximum(1000);
        spinMaxScore.setMinimum(0);

        javax.swing.GroupLayout editHeaderLayout = new javax.swing.GroupLayout(editHeader);
        editHeader.setLayout(editHeaderLayout);
        editHeaderLayout.setHorizontalGroup(
            editHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblProgressReport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtReportName, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spinMaxScore, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel)
                .addContainerGap())
        );
        editHeaderLayout.setVerticalGroup(
            editHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editHeaderLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(editHeaderLayout.createSequentialGroup()
                        .addGroup(editHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(spinMaxScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(editHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblProgressReport)
                                .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtReportName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        header.add(editHeader, "edit");

        java.awt.GridBagLayout sectionsPanelLayout = new java.awt.GridBagLayout();
        sectionsPanelLayout.rowHeights = new int[] {100};
        sectionsPanelLayout.columnWeights = new double[] {1.0};
        sectionsPanelLayout.rowWeights = new double[] {1.0};
        sectionsPanel.setLayout(sectionsPanelLayout);
        jScrollPane2.setViewportView(sectionsPanel);

        javax.swing.GroupLayout displayLayout = new javax.swing.GroupLayout(display);
        display.setLayout(displayLayout);
        displayLayout.setHorizontalGroup(
            displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        displayLayout.setVerticalGroup(
            displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, displayLayout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2))
        );

        javax.swing.GroupLayout centerLayout = new javax.swing.GroupLayout(center);
        center.setLayout(centerLayout);
        centerLayout.setHorizontalGroup(
            centerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(centerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(centerLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(48, 48, 48)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(display, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        centerLayout.setVerticalGroup(
            centerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(centerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(centerLayout.createSequentialGroup()
                        .addGroup(centerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(btnAdd))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE))
                    .addComponent(display, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 145;
        gridBagConstraints.ipady = 413;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(center, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

   private void lstReportsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstReportsValueChanged
      int index = lstReports.getSelectedIndex();
      if (index > -1)
      {
         current = reportTypeModel.get(index);
         populateFields();
      }
   }//GEN-LAST:event_lstReportsValueChanged

   private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
      if (current != null)
         switchToEdit(true);
   }//GEN-LAST:event_btnEditActionPerformed

   private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
      if (current == null)
         return;
      if (PopupMessage.createDelete(current.toString()))
      {
         try {
            SchoolManager.deleteProgressReportType(current);
            PopupMessage.createInfo(current + " successfully deleted.", "Delete successful.");
            refresh();
         } catch (DatabaseException ex) {
            PopupMessage.createErrorPopUp(ex.getMessage(), null);
         }
         
      }
      
   }//GEN-LAST:event_btnDeleteActionPerformed

   private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed

      refresh();
   }//GEN-LAST:event_btnCancelActionPerformed

   private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
      ProgressReportType newReportType = getFields();
      newReportType.setReport_type_id(current.getReport_type_id());
      newReportType.getReportCardCommentTemplate().setReport_type_id(current.getReport_type_id());
      try {
         SchoolManager.modifyProgressReportType(newReportType);
         refresh();
         
      } catch (DatabaseException | BadFieldException ex) {
         PopupMessage.createInfo(ex.getMessage(), null);
      }
      
      
   }//GEN-LAST:event_btnSaveActionPerformed

   private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
      String name  = PopupMessage.createInput("Please Enter the Report Type name:", "New report type");
      ProgressReportType t = getNewReportType(name);
      try {
         SchoolManager.createProgressReportType(t);
         refresh();
         int index = 0;
         for (int i = 0; i < reportTypeModel.size();i++)
         {
            if (reportTypeModel.get(i).getName().equals(name)){
               index = i;
               break;
            }
         }
         lstReports.setSelectedIndex(index);
         switchToEdit(true);
      } catch (BadFieldException | DatabaseException ex) {
         PopupMessage.createInfo(ex.getMessage(), null);
      }
   }//GEN-LAST:event_btnAddActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JPanel center;
    private javax.swing.JPanel display;
    private javax.swing.JPanel displayHeader;
    private javax.swing.JPanel editHeader;
    private javax.swing.JPanel header;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblMaxScore;
    private javax.swing.JLabel lblProgressReport;
    private javax.swing.JLabel lblProgressReportName;
    private javax.swing.JList lstReports;
    private javax.swing.JPanel sectionsPanel;
    private com.toedter.components.JSpinField spinMaxScore;
    private javax.swing.JTextField txtReportName;
    // End of variables declaration//GEN-END:variables

   @Override
   public void initialize() {
      sectionsPanel.removeAll();
      
      section1 = new ReportSectionPanel(this);
      section2 = new ReportSectionPanel(this);
      section3 = new ReportSectionPanel(this);
      section4 = new ReportSectionPanel(this);
      addSectionElement(0,section1);
      addSectionElement(1,section2);
      addSectionElement(2,section3);
      addSectionElement(3,section4);
      
      refresh();
   }
   private void addSectionElement(int y,JPanel panel)
    {
        GridBagLayout g = (GridBagLayout) sectionsPanel.getLayout();
        
        GridBagConstraints c = new GridBagConstraints();

        c.gridx = 0;
        c.gridy = y;
        c.gridwidth=1;
        c.gridheight = 1;
        c.fill = GridBagConstraints.HORIZONTAL;
        c.anchor= GridBagConstraints.CENTER;
        c.weighty=0.5;
               
        g.setConstraints(panel, c);
        sectionsPanel.add(panel);
    }

   @Override
   public void refresh() {
      switchToEdit(false);
      try {
         reportTypeModel.clear();
         
         List<ProgressReportType> reportTypes = SchoolManager.loadAllProgressReportType();
         for (ProgressReportType t : reportTypes)
         {
            reportTypeModel.addElement(t);
         }
         
        
      } catch (DatabaseException ex) {
         PopupMessage.createErrorPopUp(ex.getMessage(), null);
      }
      if (reportTypeModel.size() > 0)
      {
         display.setVisible(true);
         lstReports.setSelectedIndex(0);
      }else
      {
         display.setVisible(false);
      }
     
   }

   @Override
   public void setFocus() {
      this.btnAdd.requestFocus();
   }

   private void populateFields() {
      this.lblMaxScore.setText(String.valueOf(current.getMaxScore()));
      this.spinMaxScore.setValue(current.getMaxScore());
      
      this.lblProgressReportName.setText(current.getName());
      this.txtReportName.setText(current.getName());
      
      List<String> criteria = new ArrayList();
      criteria.add(current.getCriteria1());
      criteria.add(current.getCriteria2());
      criteria.add(current.getCriteria3());
      
      section1.setData(current.getSection1(), current.getReportCardCommentTemplate().getSection1Observation(),
         current.getReportCardCommentTemplate().getSection1Recommendation(), criteria);
      
      criteria.clear();
      criteria.add(current.getCriteria4());
      criteria.add(current.getCriteria5());
      criteria.add(current.getCriteria6());
      section2.setData(current.getSection2(), current.getReportCardCommentTemplate().getSection2Observation(),
         current.getReportCardCommentTemplate().getSection2Recommendation(), criteria);
      
      criteria.clear();
      criteria.add(current.getCriteria7());
      criteria.add(current.getCriteria8());
      criteria.add(current.getCriteria9());
      section3.setData(current.getSection3(), current.getReportCardCommentTemplate().getSection3Observation(),
         current.getReportCardCommentTemplate().getSection3Recommendation(), criteria);
      
      criteria.clear();
      criteria.add(current.getCriteria10());
      criteria.add(current.getCriteria11());
      criteria.add(current.getCriteria12());
      section4.setData(current.getSection4(), null,null, criteria);
      
   }
   private void switchToEdit(boolean editable)
   {
      String card;
      if (editable)
        card = "edit";
      else 
         card = "display";
      CardLayout c = (CardLayout) header.getLayout();
      c.show(header, card);
      
      section1.setEditable(editable);
      section2.setEditable(editable);
      section3.setEditable(editable);
      section4.setEditable(editable);
   }

   private ProgressReportType getFields() {
      ProgressReportType t = new ProgressReportType();
      t.setName(this.txtReportName.getText().trim());
      t.setMaxScore(this.spinMaxScore.getValue());
      
      t.setSection1(section1.getSection());
      List<String> criteria = section1.getCriteria();
      t.setCriteria1(criteria.get(0));
      t.setCriteria2(criteria.get(1));
      t.setCriteria3(criteria.get(2));
      
      t.setSection2(section2.getSection());
      criteria = section2.getCriteria();
      t.setCriteria4(criteria.get(0));
      t.setCriteria5(criteria.get(1));
      t.setCriteria6(criteria.get(2));
      
      t.setSection3(section3.getSection());
      criteria = section3.getCriteria();
      t.setCriteria7(criteria.get(0));
      t.setCriteria8(criteria.get(1));
      t.setCriteria9(criteria.get(2));
      
      t.setSection4(section4.getSection());
      criteria = section4.getCriteria();
      t.setCriteria10(criteria.get(0));
      t.setCriteria11(criteria.get(1));
      t.setCriteria12(criteria.get(2));
      
      ReportCardCommentTemplate reportCard = new ReportCardCommentTemplate();
      reportCard.setSection1Observation(section1.getObservation());
      reportCard.setSection2Observation(section2.getObservation());
      reportCard.setSection3Observation(section3.getObservation());
      
      reportCard.setSection1Recommendation(section1.getRecommendation());
      reportCard.setSection2Recommendation(section2.getRecommendation());
      reportCard.setSection3Recommendation(section3.getRecommendation());
      
      t.setReportCardCommentTemplate(reportCard);
      
     
      return t;
      
   }

   private ProgressReportType getNewReportType(String name) {
      ProgressReportType t = new ProgressReportType();
      t.setMaxScore(5);
      t.setName(name);
      t.setCriteria1("criteria 1");
      t.setCriteria2(("criteria 2"));
      t.setCriteria4("criteria 4");
      t.setCriteria3("criteria 3");
      t.setCriteria6("criteria 6");
      t.setCriteria5("criteria 5");
      t.setCriteria7("criteria 7");
      t.setCriteria8("criteria 8");
      t.setCriteria9("criteria 9");
      t.setCriteria10("criteria 10");
      t.setCriteria11("criteria 11");
      t.setCriteria12("criteria 12");
      t.setSection1("Building");
      t.setSection2("Programming");
      t.setSection3("Presentation");
      t.setSection4("Behavior");
      t.setDeleted(false);
      ReportCardCommentTemplate reportcard = new ReportCardCommentTemplate();
      List<String> sentences = new ArrayList();
      sentences.add("This is a sample comment");
      sentences.add("This is a 2nd sample comment");
      sentences.add("This is a 3rd sample comment");
      reportcard.setSection1Observation(sentences);
      reportcard.setSection2Observation(sentences);
      reportcard.setSection3Observation(sentences);
      reportcard.setSection1Recommendation(sentences);
      reportcard.setSection2Recommendation(sentences);
      reportcard.setSection3Recommendation(sentences);
      
      t.setReportCardCommentTemplate(reportcard);
      
      return t;
   }

}
