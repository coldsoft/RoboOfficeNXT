/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.robokids.robooffice.desktop.tabs.school;

import ca.robokids.exception.DatabaseException;
import ca.robokids.robooffice.desktop.customSwing.MembershipInfoPanel;
import ca.robokids.robooffice.desktop.customSwing.MembershipInfoPanel;
import ca.robokids.robooffice.desktop.loaders.FontsLoader;
import ca.robokids.robooffice.desktop.main.TabManager;
import ca.robokids.robooffice.desktop.tabs.Tab;
import ca.robokids.robooffice.desktop.util.PopupMessage;
import ca.robokids.robooffice.entity.schoolmetadata.Membership;
import ca.robokids.robooffice.entity.schoolmetadata.DayOfWeek;
import ca.robokids.robooffice.entity.schoolmetadata.Membership;
import ca.robokids.robooffice.entity.schoolmetadata.Timeslot;
import ca.robokids.robooffice.logic.schoolsettings.SchoolManager;
import java.sql.Time;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author Coldsoft
 */
public class MembershipTab extends javax.swing.JPanel implements Tab{

   /**
    * Creates new form MembershipTab
    */
   MembershipInfoPanel membershipPane;
   Membership current;
   DefaultListModel<Membership> membershipModel = new DefaultListModel();
   int index;
   
   public MembershipTab() {
      initComponents();
      membershipPane = new MembershipInfoPanel(this);
      pnlMembership.add(membershipPane);
      initialize();

   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        center = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstMemberships = new javax.swing.JList();
        btnAdd = new javax.swing.JButton();
        pnlMembership = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(FontsLoader.getStaticLabelFont());
        jLabel1.setText("Memberships");

        lstMemberships.setFont(FontsLoader.getBigListFont());
        lstMemberships.setModel(membershipModel);
        lstMemberships.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstMembershipsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstMemberships);

        btnAdd.setFont(FontsLoader.getButtonFont());
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        pnlMembership.setLayout(new javax.swing.BoxLayout(pnlMembership, javax.swing.BoxLayout.LINE_AXIS));

        javax.swing.GroupLayout centerLayout = new javax.swing.GroupLayout(center);
        center.setLayout(centerLayout);
        centerLayout.setHorizontalGroup(
            centerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(centerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(centerLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdd))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlMembership, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE))
        );
        centerLayout.setVerticalGroup(
            centerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(centerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addGap(40, 40, 40))
            .addComponent(pnlMembership, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        add(center, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents

   private void lstMembershipsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstMembershipsValueChanged
      index = lstMemberships.getSelectedIndex();
      if (index > -1)
      {
         current = membershipModel.elementAt(index);
         membershipPane.setMembership(current);
      }
   }//GEN-LAST:event_lstMembershipsValueChanged

   private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
      membershipPane.add();

   }//GEN-LAST:event_btnAddActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JPanel center;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lstMemberships;
    private javax.swing.JPanel pnlMembership;
    // End of variables declaration//GEN-END:variables

   @Override
   public void initialize() {
      refresh();
   }

   @Override
   public void refresh() {
      membershipModel.removeAllElements();
      try {
         List<Membership> memberships = SchoolManager.loadAllMemberships();
         for (Membership c : memberships)
            membershipModel.addElement(c);
      } catch (DatabaseException ex) {
         PopupMessage.createErrorPopUp(ex.getMessage(), null);
      }
      
      if (membershipModel.getSize() > 0)
      {
         if (index > -1 && index < membershipModel.getSize())
            lstMemberships.setSelectedIndex(index);
         else
            lstMemberships.setSelectedIndex(0);
      }
      membershipPane.setEditable(false);
   }

   @Override
   public void setFocus() {
      
      this.btnAdd.requestFocus();
      
   }


}
