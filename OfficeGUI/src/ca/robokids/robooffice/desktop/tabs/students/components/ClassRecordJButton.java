/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.robokids.robooffice.desktop.tabs.students.components;

import ca.robokids.robooffice.desktop.loaders.FontsLoader;
import ca.robokids.robooffice.entity.student.ClassRecord;
import ca.robokids.robooffice.logic.student.StudentProgressManager;
import java.awt.Color;
import java.text.SimpleDateFormat;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;

/**
 *
 * @author Coldsoft
 */
public class ClassRecordJButton extends javax.swing.JButton {

   /**
    * Creates new form ClassRecordJButton
    */


   JPopupMenu popup = new JPopupMenu();
   ClassRecord classRecord = null;



   
   public ClassRecordJButton() {
      initComponents();
   }


   public void setClassRecord(ClassRecord classRecord) {
      this.classRecord = classRecord;
      setText(getButtonText());
      setToolTipText(getTooltipText());
      initPopup();
      this.setOpaque(true);
      this.setBackground(StudentProgressManager.getClassRecordColor(classRecord));
   }
   public ClassRecord getClassRecord()
   {
      return classRecord;
   }

   public void setEditable(boolean editable) {
      if (!editable)
         this.setComponentPopupMenu(null);
      else
         this.setComponentPopupMenu(popup);
   }
   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setFont(new java.awt.Font("Meiryo UI", 0, 10)); // NOI18N
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

   private String getButtonText() {
      String text = "<html><center>";
      if (classRecord.isOverdue()) {
         text += "<font color = \"red\">";
      }
      SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yy");
      String attendDate = sdf.format(classRecord.getAttendDate());
      text += attendDate + "<br>";

      String time = "";
      if (classRecord.getSection() != null) {
         time = classRecord.getSection().getTimeslot().toString();
      }
      text += time + "<br>";

      if (!classRecord.isComplete()) {
         text += "<i>(To be filled<br>by teacher)</i><br>";
      } else {
         String project = "";
         if (classRecord.getProject() != null) {
            project = classRecord.getProject().getName();
         }
         text += "<font face=\"Segoe UI Semibold\">" + project + "</font><br>";

         if (classRecord.isTest()) {
            text += "(test day)<br>";
         }
      }
      if (classRecord.isOverdue()) {
         text += "</font>";
      }
      text += "<center></html>";
      return text;
   }
   
   private String getTooltipText() {
      String text = "<html>Attended at <font face=\"Segoe UI Semibold\" size = 3>";
      String time = "";
      String day = "";
      if (classRecord.getSection() != null) {
         time = classRecord.getSection().getTimeslot().getStartString();
         day = classRecord.getSection().getTimeslot().getDayOfWeek().toString();
      }
      text += time + " ";
      text += day + " ";

      SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");
      String attendDate = sdf.format(classRecord.getAttendDate());

      text += attendDate + "</font><br>";
      if (classRecord.isMakeupClass()) {
         text += "<font face =\"Segoe UI\" color = \"green\">" + "This class is a make-up class." + "</font><br>";
      }
      if (!classRecord.isComplete()) {
         text += "<font face =\"Segoe UI\" color = \"black\">"
            + "<i>(Other information unavailable. Instructor needs to fill in project name and progress report.)</font><br>";
      } else {

         if (classRecord.isTest()) {
            text += "Test Day: ";
         } else {
            text += "Project: ";
         }
         String project = "";
         if (classRecord.getProject() != null) {
            project = classRecord.getProject().getName();
         }

         text += "<font face=\"Segoe UI Semibold\" size = 4>" + project + "</font><br>";
      }
      if (classRecord.isOverdue()) {
         text += "<font face = \"Segoe UI\" color = \"red\">" + "OVERDUE: This class requires Payment." + "<font><br>";
      }


      text += "<center></html>";
      return text;
   }
   
   
   public void setFutureClass(int i) {
      setEnabled(false);
      setText("<html><font size = 4>Class #" + i + "</font></html>");
      setToolTipText("Future class");
   }

   /**
    * when a button is not in-use, and acts as a placement for the rest of the row.
    */
   public void setNotUsed() {
      setEnabled(false);
      setText("<html><font color = \"red\">Not paid</font></html>");
   }


   private void initPopup() {
      if (classRecord == null)
         return;
      JMenuItem menuItem = new JMenuItem("Edit");
      menuItem.setFont(FontsLoader.getMenuItemFont());
      popup.add(menuItem);
      menuItem = new JMenuItem("Delete");
      menuItem.setFont(FontsLoader.getButtonFont());
      menuItem.setForeground(Color.red);
      
      popup.add(menuItem);
      this.setComponentPopupMenu(popup);
   }
}
