/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.robokids.robooffice.desktop.tabs.user;

import ca.robokids.exception.BadFieldException;
import ca.robokids.exception.DatabaseException;
import ca.robokids.exception.DoesNotExistException;
import ca.robokids.robooffice.desktop.customSwing.UserInfoPanel;
import ca.robokids.robooffice.desktop.loaders.FontsLoader;
import ca.robokids.robooffice.desktop.tabs.Tab;
import ca.robokids.robooffice.desktop.util.PopupMessage;
import ca.robokids.robooffice.entity.user.Action;
import ca.robokids.robooffice.entity.user.User;
import ca.robokids.robooffice.entity.user.UserGroup;
import ca.robokids.robooffice.logic.usermanagement.UserActivity;
import ca.robokids.robooffice.logic.usermanagement.UserManager;
import de.javasoft.swing.JYCheckBoxList;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author Coldsoft
 */
public class UserSettingTab extends javax.swing.JPanel implements Tab{

   /**
    * Creates new form UserSettingTab
    */
   List<UserGroup> groups = null;
   UserInfoPanel userInfo = new UserInfoPanel();;
   DefaultListModel<User> userModel = new DefaultListModel();
   JYCheckBoxList.CheckBoxSelectionModel checkboxGroupModel;
   DefaultListModel<UserGroup> groupModel = new DefaultListModel();
   
   JYCheckBoxList.CheckBoxSelectionModel checkboxActionModel;
   DefaultListModel<Action> actionModel = new DefaultListModel();
   
   User current;
   UserGroup currentGroup;
   
   private final String EDIT = "Edit";
   private final String SAVE = "Save";
   
   public UserSettingTab() {
      initComponents();
      try {
           this.tabbedPane.setEnabledAt(1,(UserActivity.hasPrivilege(pnlUserGroupManagement.getName())));
         
      } catch (DatabaseException ex) {
         Logger.getLogger(UserSettingTab.class.getName()).log(Level.SEVERE, null, ex);
      }
      this.pnlUserInfo.add(userInfo);
      initialize();
      
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        tabbedPane = new javax.swing.JTabbedPane();
        pnlUserManagement = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstUsers = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        pnlEdit = new javax.swing.JPanel();
        pnlUserInfo = new javax.swing.JPanel();
        pnlPrivilege = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listGroups = new de.javasoft.swing.JYCheckBoxList();
        jLabel2 = new javax.swing.JLabel();
        btnEdit = new javax.swing.JButton();
        lblErrorMsg = new javax.swing.JLabel();
        btnDeleteUser = new javax.swing.JButton();
        pnlUserGroupManagement = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstGroups = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtGroupName = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstActions = new de.javasoft.swing.JYCheckBoxList();
        btnSaveGroup = new javax.swing.JButton();
        lblErrorMsgActions = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnAddGroup = new javax.swing.JButton();
        btnDeleteGroup = new javax.swing.JButton();
        btnClearAll = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        tabbedPane.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        tabbedPane.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        tabbedPane.setName("groupManagement");

        lstUsers.setFont(FontsLoader.getListFont());
        lstUsers.setModel(this.userModel);
        lstUsers.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstUsersValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstUsers);

        jLabel1.setFont(FontsLoader.getStaticLabelFont());
        jLabel1.setText("Users List:");

        pnlUserInfo.setLayout(new javax.swing.BoxLayout(pnlUserInfo, javax.swing.BoxLayout.LINE_AXIS));

        listGroups.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listGroups.setCheckBoxSelectableByItemClick(true);
        listGroups.setFont(FontsLoader.getDynamicLabelFont());
        jScrollPane2.setViewportView(listGroups);

        jLabel2.setFont(FontsLoader.getStaticLabelFont());
        jLabel2.setText("User Groups:");

        btnEdit.setFont(FontsLoader.getButtonFont());
        btnEdit.setText(EDIT);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        lblErrorMsg.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        lblErrorMsg.setForeground(new java.awt.Color(255, 51, 51));

        btnDeleteUser.setFont(FontsLoader.getButtonFont());
        btnDeleteUser.setForeground(new java.awt.Color(255, 51, 51));
        btnDeleteUser.setText("Delete This User");
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPrivilegeLayout = new javax.swing.GroupLayout(pnlPrivilege);
        pnlPrivilege.setLayout(pnlPrivilegeLayout);
        pnlPrivilegeLayout.setHorizontalGroup(
            pnlPrivilegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrivilegeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPrivilegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPrivilegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(pnlPrivilegeLayout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnEdit))
                        .addComponent(jScrollPane2)
                        .addComponent(lblErrorMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnDeleteUser))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlPrivilegeLayout.setVerticalGroup(
            pnlPrivilegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrivilegeLayout.createSequentialGroup()
                .addComponent(lblErrorMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPrivilegeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlPrivilegeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnEdit)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeleteUser)
                .addGap(11, 11, 11))
        );

        javax.swing.GroupLayout pnlEditLayout = new javax.swing.GroupLayout(pnlEdit);
        pnlEdit.setLayout(pnlEditLayout);
        pnlEditLayout.setHorizontalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlUserInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(pnlPrivilege, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );
        pnlEditLayout.setVerticalGroup(
            pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEditLayout.createSequentialGroup()
                .addGroup(pnlEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEditLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlPrivilege, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pnlUserInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlUserManagementLayout = new javax.swing.GroupLayout(pnlUserManagement);
        pnlUserManagement.setLayout(pnlUserManagementLayout);
        pnlUserManagementLayout.setHorizontalGroup(
            pnlUserManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserManagementLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUserManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlUserManagementLayout.setVerticalGroup(
            pnlUserManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserManagementLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUserManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlUserManagementLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        tabbedPane.addTab("User Managemenet", pnlUserManagement);

        pnlUserGroupManagement.setName("groupManagement");

        lstGroups.setFont(FontsLoader.getListFont());
        lstGroups.setModel(groupModel);
        lstGroups.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstGroupsValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lstGroups);

        jLabel3.setFont(FontsLoader.getStaticLabelFont());
        jLabel3.setText("Group Name:");

        txtGroupName.setFont(FontsLoader.getTextFieldFont());

        lstActions.setModel(this.actionModel);
        lstActions.setCheckBoxSelectableByItemClick(true);
        lstActions.setFont(FontsLoader.getDynamicLabelFont());
        jScrollPane4.setViewportView(lstActions);

        btnSaveGroup.setFont(FontsLoader.getButtonFont());
        btnSaveGroup.setText("Save");
        btnSaveGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveGroupActionPerformed(evt);
            }
        });

        lblErrorMsgActions.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        lblErrorMsgActions.setForeground(new java.awt.Color(255, 51, 51));

        jLabel4.setFont(FontsLoader.getStaticLabelFont());
        jLabel4.setText("Permissions");

        btnAddGroup.setFont(FontsLoader.getButtonFont());
        btnAddGroup.setText("Add New Group");
        btnAddGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddGroupActionPerformed(evt);
            }
        });

        btnDeleteGroup.setFont(FontsLoader.getButtonFont());
        btnDeleteGroup.setForeground(new java.awt.Color(255, 0, 0));
        btnDeleteGroup.setText("Delete This Group");
        btnDeleteGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteGroupActionPerformed(evt);
            }
        });

        btnClearAll.setFont(FontsLoader.getButtonFont());
        btnClearAll.setText("Clear All");
        btnClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSaveGroup)
                                .addGap(0, 73, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblErrorMsgActions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDeleteGroup, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(btnAddGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnClearAll)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSaveGroup)
                    .addComponent(btnAddGroup))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDeleteGroup)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(lblErrorMsgActions, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClearAll)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setFont(FontsLoader.getStaticLabelFont());
        jLabel5.setText("Group List:");

        javax.swing.GroupLayout pnlUserGroupManagementLayout = new javax.swing.GroupLayout(pnlUserGroupManagement);
        pnlUserGroupManagement.setLayout(pnlUserGroupManagementLayout);
        pnlUserGroupManagementLayout.setHorizontalGroup(
            pnlUserGroupManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserGroupManagementLayout.createSequentialGroup()
                .addGroup(pnlUserGroupManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlUserGroupManagementLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel5)
                        .addGap(125, 125, 125)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlUserGroupManagementLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlUserGroupManagementLayout.setVerticalGroup(
            pnlUserGroupManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserGroupManagementLayout.createSequentialGroup()
                .addGroup(pnlUserGroupManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlUserGroupManagementLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3))
                    .addGroup(pnlUserGroupManagementLayout.createSequentialGroup()
                        .addContainerGap(12, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        tabbedPane.addTab("User Group Management", pnlUserGroupManagement);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 73;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 10, 11, 10);
        add(tabbedPane, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

   private void lstUsersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstUsersValueChanged
      
      int index = lstUsers.getSelectedIndex();
      if (index > -1)
      {
      current = userModel.getElementAt(index);
      userInfo.setUser(current);
      setUserGroupList(current);
      }
   }//GEN-LAST:event_lstUsersValueChanged

   private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
      if (btnEdit.getText().equals(EDIT))
      {
         setGroupEditable(true);
      }else if (btnEdit.getText().equals(SAVE)){
         this.btnEdit.setEnabled(false);
         this.btnEdit.repaint();
         if (saveUserGroup())
         {
            setGroupEditable(false);
            userInfo.setUser(current);
            lblErrorMsg.setText(current.toString() + " Updated.");
         }
         this.btnEdit.setEnabled(true);
      }
   }//GEN-LAST:event_btnEditActionPerformed

   private void lstGroupsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstGroupsValueChanged
      int index = lstGroups.getSelectedIndex();
      if (index > -1)
      {
         currentGroup = groupModel.getElementAt(index);
         txtGroupName.setText(currentGroup.getGroupName());
         setActionList();
      }
   }//GEN-LAST:event_lstGroupsValueChanged

   private void btnSaveGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveGroupActionPerformed
      this.txtGroupName.setEnabled(false);

      List<Action> oldAction = currentGroup.getActions();
      currentGroup.setActions(saveAction(currentGroup));
      try {
         UserManager.modifyUserGroup(currentGroup);
         lblErrorMsgActions.setText(currentGroup.toString() + " Updated.");
      } catch (BadFieldException ex) {
         currentGroup.setActions(oldAction);
         lblErrorMsgActions.setText(ex.getMessage());
      } catch (DatabaseException ex) {
         currentGroup.setActions(oldAction);
         PopupMessage.createErrorPopUp(ex.getMessage(), null);
      }
      this.txtGroupName.setEnabled(true);
   }//GEN-LAST:event_btnSaveGroupActionPerformed

   private void btnAddGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddGroupActionPerformed
      this.btnAddGroup.setEnabled(false);
      UserGroup g = new UserGroup();
      g.setGroupName(this.txtGroupName.getText());
      g.setActions(saveAction(g));
      try {
         UserManager.createUserGroup(g);
         refresh();
      } catch (BadFieldException ex) {
         lblErrorMsgActions.setText(ex.getMessage());
      } catch (DatabaseException ex) {
         PopupMessage.createErrorPopUp(ex.getMessage(), null);
      }
      this.btnAddGroup.setEnabled(true);
      
   }//GEN-LAST:event_btnAddGroupActionPerformed

   private void btnDeleteGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteGroupActionPerformed
      int index = lstGroups.getSelectedIndex();
      if (index > -1)
      {
         UserGroup toBeDeleted = groupModel.getElementAt(index);
         if (PopupMessage.createDelete(toBeDeleted.toString()))
         {
            try {
               UserManager.deleteUserGroup(toBeDeleted);
            } catch (DatabaseException ex) {
               PopupMessage.createErrorPopUp(ex.getMessage(), null);
            } catch (DoesNotExistException ex) {
               PopupMessage.createErrorPopUp(ex.getMessage(), null);
            }
         }
         refresh();
      }
   }//GEN-LAST:event_btnDeleteGroupActionPerformed

   private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
      int index = lstUsers.getSelectedIndex();
      if (index > -1)
      {
         User toBeDeleted = userModel.getElementAt(index);
         if (PopupMessage.createDelete(toBeDeleted.toString()))
         {
            try {
               UserManager.deleteUser(toBeDeleted);
            } catch (DatabaseException ex) {
               PopupMessage.createErrorPopUp(ex.getMessage(), null);
            } catch (DoesNotExistException ex) {
               PopupMessage.createErrorPopUp(ex.getMessage(), null);
            }
         }
         refresh();
      }
   }//GEN-LAST:event_btnDeleteUserActionPerformed

   private void btnClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllActionPerformed
      lstActions.clearCheckBoxSelection();
   }//GEN-LAST:event_btnClearAllActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddGroup;
    private javax.swing.JButton btnClearAll;
    private javax.swing.JButton btnDeleteGroup;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSaveGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblErrorMsg;
    private javax.swing.JLabel lblErrorMsgActions;
    private de.javasoft.swing.JYCheckBoxList listGroups;
    private de.javasoft.swing.JYCheckBoxList lstActions;
    private javax.swing.JList lstGroups;
    private javax.swing.JList lstUsers;
    private javax.swing.JPanel pnlEdit;
    private javax.swing.JPanel pnlPrivilege;
    private javax.swing.JPanel pnlUserGroupManagement;
    private javax.swing.JPanel pnlUserInfo;
    private javax.swing.JPanel pnlUserManagement;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTextField txtGroupName;
    // End of variables declaration//GEN-END:variables

   @Override
   public void initialize() {
      
      refresh();
      setGroupEditable(false);
      
      
   }

   @Override
   public void refresh() {
     
      lblErrorMsgActions.setText("");
      try {
         //load usergroup information
         groupModel.clear();
         groups = UserManager.loadAllUserGroup();
         for (UserGroup g : groups) {
            groupModel.addElement(g);
         }
         listGroups.setModel(groupModel);
         checkboxGroupModel = new JYCheckBoxList.CheckBoxSelectionModel(listGroups, false);
         this.listGroups.setCheckBoxSelectionModel(checkboxGroupModel);
         checkboxGroupModel.clearSelection();
         listGroups.setCheckBoxSelectableByItemClick(true);
      } catch (DatabaseException ex) {
         System.out.println(ex.getMessage());
      }
      try {
         userModel.clear();
         //Load User information
         List<User> users = UserManager.loadAllUsers();
         for (User u : users)
            userModel.addElement(u);
      } catch (DatabaseException ex) {
         System.out.println(ex.getMessage());
      }
      
      actionModel.clear();
      //Load action information    
      try {
         List<Action> actions;
         actions = UserManager.loadAllActions();
         for(Action a : actions)
         actionModel.addElement(a);
      } catch (DatabaseException ex) {
         System.out.println(ex.getMessage());
      }
      
      if (groupModel.size()> 0)
      {
         lstGroups.setSelectedIndex(0);
      }
      //point list at index 0
      if (userModel.size()>0)
      {
         lstUsers.setSelectedIndex(0);
      }
      
      
         

   }

   @Override
   public void setFocus() {
      
   }

   private void setUserGroupList(User user) {
      listGroups.clearCheckBoxSelection();
      //tickle the user's group in usergroup checkboxes
      List<Integer> indice = new ArrayList();
      List<UserGroup> usergroups = user.getUserGroups();
      for (UserGroup g : usergroups)      
      {       
         int index = groupModel.indexOf(g);
         if (index > -1)
         {
            indice.add(index);
         }
      }
      //Convert arraylist to int[], very dirty way. but checkboxlist api sucks, so.
      Integer selected[] = indice.toArray(new Integer[0]);
      int checked[] = new int[selected.length];
      for (int i=0; i < selected.length; i++)
      {
         checked[i] = selected[i];
      }
      listGroups.setSelectedCheckBoxIndices(checked);

   }

   private void setGroupEditable(boolean editable) {
      System.out.println(editable);
      if(editable)
      {
         
         this.btnEdit.setText(SAVE);
         this.listGroups.setEnabled(true);
         this.listGroups.setBackground(new Color(204,204,204));
      }else
      {
         this.btnEdit.setText(EDIT);
         this.listGroups.setEnabled(false);
         this.listGroups.setBackground(this.getBackground());
      }
   }

   private boolean saveUserGroup() {
      int selected[] = listGroups.getSelectedCheckBoxIndices();
      List<UserGroup> newGroups = new ArrayList();
      for (int i = 0; i < selected.length; i++)
      {
         newGroups.add(groupModel.getElementAt(selected[i]));
      }
      
      List<UserGroup> oldGroups = current.getUserGroups();
      current.setUserGroups(newGroups);
      try {
         UserManager.modifyUser(current);
         return true;
      } catch (BadFieldException ex) {
         current.setUserGroups(oldGroups);
         lblErrorMsg.setText(ex.getMessage());
         return false;
      } catch (DatabaseException ex) {
         current.setUserGroups(oldGroups);
         PopupMessage.createErrorPopUp(ex.getMessage(), null);
         return false;
      }
      
   }

   private void setActionList() {
      //tickle the user's group in usergroup checkboxes
      lstActions.clearCheckBoxSelection();
      List<Integer> indice = new ArrayList();
      List<Action> actions = currentGroup.getActions();
      for (Action a : actions)      
      {       
         int index = actionModel.indexOf(a);
         if (index > -1)
         {
            indice.add(index);
         }
      }
      //Convert arraylist to int[], very dirty way. but checkboxlist api sucks, so.
      Integer selected[] = indice.toArray(new Integer[0]);
      int checked[] = new int[selected.length];
      for (int i=0; i < selected.length; i++)
      {
         checked[i] = selected[i];
      }
      lstActions.setSelectedCheckBoxIndices(checked);
   }

   private List<Action> saveAction(UserGroup group) {
      int selected[] = lstActions.getSelectedCheckBoxIndices();
      List<Action> newAction = new ArrayList();
      for (int i = 0; i < selected.length; i++)
      {
         newAction.add(actionModel.getElementAt(selected[i]));
      }
      return newAction;
      
   }


}
