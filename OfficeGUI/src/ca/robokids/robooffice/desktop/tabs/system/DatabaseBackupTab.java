/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.robokids.robooffice.desktop.tabs.system;

import ca.robokids.exception.DatabaseException;
import ca.robokids.robooffice.db.DatabaseConfig;
import ca.robokids.robooffice.desktop.loaders.FontsLoader;
import ca.robokids.robooffice.desktop.tabs.Tab;
import ca.robokids.robooffice.desktop.util.PopupMessage;
import ca.robokids.robooffice.logic.system.SystemManager;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author Coldsoft
 */
public class DatabaseBackupTab extends javax.swing.JPanel implements Tab {

   /**
    * Creates new form DatabaseBackupTab
    */
   public DatabaseBackupTab() {
      initComponents();
      initialize();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTextField1 = new javax.swing.JTextField();
        centre = new javax.swing.JPanel();
        txtPath = new javax.swing.JTextField();
        btnBrowse = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnBackup = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        lblMsg = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        txtDatabase = new javax.swing.JTextField();
        txtIP1 = new ca.robokids.robooffice.desktop.customSwing.IntegerNumberJTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtIP2 = new ca.robokids.robooffice.desktop.customSwing.IntegerNumberJTextField();
        jLabel8 = new javax.swing.JLabel();
        txtIP3 = new ca.robokids.robooffice.desktop.customSwing.IntegerNumberJTextField();
        jLabel9 = new javax.swing.JLabel();
        txtIP4 = new ca.robokids.robooffice.desktop.customSwing.IntegerNumberJTextField();
        spinPort = new com.toedter.components.JSpinField();

        jTextField1.setText("jTextField1");

        setLayout(new java.awt.GridBagLayout());

        centre.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Database Backup", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, FontsLoader.getTitleBorderFont()));

        txtPath.setEditable(false);
        txtPath.setFont(FontsLoader.getDynamicLabelFont());
        txtPath.setText("C:\\");
            txtPath.setEnabled(false);

            btnBrowse.setFont(FontsLoader.getButtonFont());
            btnBrowse.setText("Browse");
            btnBrowse.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnBrowseActionPerformed(evt);
                }
            });

            jLabel1.setFont(FontsLoader.getStaticLabelFont());
            jLabel1.setText("Backup File path:");

            btnBackup.setFont(FontsLoader.getButtonFont());
            btnBackup.setText("Backup");
            btnBackup.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnBackupActionPerformed(evt);
                }
            });

            lblMsg.setFont(FontsLoader.getDynamicLabelFont());
            lblMsg.setForeground(new java.awt.Color(0, 0, 255));
            lblMsg.setText("Please review the database information before backup");

            jLabel2.setFont(FontsLoader.getStaticLabelFont());
            jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            jLabel2.setText("Username");

            jLabel3.setFont(FontsLoader.getStaticLabelFont());
            jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            jLabel3.setText("Password");

            jLabel4.setFont(FontsLoader.getStaticLabelFont());
            jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            jLabel4.setText("Database name");

            jLabel5.setFont(FontsLoader.getStaticLabelFont());
            jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
            jLabel5.setText("Host IP");

            txtUsername.setEditable(false);
            txtUsername.setFont(FontsLoader.getDynamicLabelFont());
            txtUsername.setEnabled(false);

            txtPassword.setEditable(false);
            txtPassword.setFont(FontsLoader.getDynamicLabelFont());
            txtPassword.setEnabled(false);

            txtDatabase.setEditable(false);
            txtDatabase.setFont(FontsLoader.getDynamicLabelFont());
            txtDatabase.setEnabled(false);

            txtIP1.setColumns(3);
            txtIP1.setEditable(false);
            txtIP1.setEnabled(false);

            jLabel6.setText(".");

            jLabel7.setText(".");

            txtIP2.setColumns(3);
            txtIP2.setEditable(false);
            txtIP2.setEnabled(false);

            jLabel8.setText(".");

            txtIP3.setColumns(3);
            txtIP3.setEditable(false);
            txtIP3.setEnabled(false);

            jLabel9.setFont(FontsLoader.getStaticLabelFont());
            jLabel9.setText("port:");

            txtIP4.setColumns(3);
            txtIP4.setEditable(false);
            txtIP4.setEnabled(false);

            spinPort.setEnabled(false);
            spinPort.setMaximum(65535);
            spinPort.setMinimum(0);

            javax.swing.GroupLayout centreLayout = new javax.swing.GroupLayout(centre);
            centre.setLayout(centreLayout);
            centreLayout.setHorizontalGroup(
                centreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(centreLayout.createSequentialGroup()
                    .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnBrowse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, centreLayout.createSequentialGroup()
                    .addComponent(lblMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnBackup))
                .addComponent(jSeparator1)
                .addGroup(centreLayout.createSequentialGroup()
                    .addGroup(centreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(centreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(centreLayout.createSequentialGroup()
                            .addComponent(txtIP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtIP2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtIP3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtIP4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(spinPort, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtDatabase)
                        .addComponent(txtPassword)
                        .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGap(0, 0, Short.MAX_VALUE))
            );
            centreLayout.setVerticalGroup(
                centreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(centreLayout.createSequentialGroup()
                    .addGroup(centreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(centreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(centreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(centreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(centreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtIP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtIP2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtIP3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtIP4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(spinPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel1)
                    .addGap(1, 1, 1)
                    .addGroup(centreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBrowse))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(centreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBackup)
                        .addComponent(lblMsg))
                    .addContainerGap())
            );

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
            add(centre, gridBagConstraints);
        }// </editor-fold>//GEN-END:initComponents

   private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed

      JFileChooser fileChooser = new JFileChooser();
      fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

      if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
         txtPath.setText(fileChooser.getSelectedFile().getAbsolutePath());
      } else {
         return;
      }
   }//GEN-LAST:event_btnBrowseActionPerformed

   private void btnBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackupActionPerformed

      final String path = txtPath.getText();
      final DatabaseBackupTab self = this;
      Thread t = new Thread() {

            @Override
            public void run() {
               try {
                  self.setControlsEnabled(false);
                  self.lblMsg.setText("Backup is working...");
                  String success = SystemManager.backupDatabase(path);                  
                  PopupMessage.createInfo("Database Backup finished! \n " + success, "Success!");                 
                  self.refresh();                  
               } catch (DatabaseException ex) {
                  PopupMessage.createErrorPopUp(ex.getMessage(), null);
               }

            }
         };
      
      t.start();
      setControlsEnabled(true);

   }//GEN-LAST:event_btnBackupActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackup;
    private javax.swing.JButton btnBrowse;
    private javax.swing.JPanel centre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblMsg;
    private com.toedter.components.JSpinField spinPort;
    private javax.swing.JTextField txtDatabase;
    private ca.robokids.robooffice.desktop.customSwing.IntegerNumberJTextField txtIP1;
    private ca.robokids.robooffice.desktop.customSwing.IntegerNumberJTextField txtIP2;
    private ca.robokids.robooffice.desktop.customSwing.IntegerNumberJTextField txtIP3;
    private ca.robokids.robooffice.desktop.customSwing.IntegerNumberJTextField txtIP4;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPath;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

   @Override
   public void initialize() {
      txtIP1.setLimit(3);
      txtIP2.setLimit(3);
      txtIP3.setLimit(3);
      txtIP4.setLimit(3);
      refresh();
   }

   @Override
   public void refresh() {
      lblMsg.setText("Please review the database information before backup.");
      setControlsEnabled(true);
      try {
         
         txtUsername.setText(DatabaseConfig.getUsername());
         txtPassword.setText(DatabaseConfig.getPassword());
         txtDatabase.setText(DatabaseConfig.getDatabase());
         String ip = DatabaseConfig.getHost();
         String[] tokens = ip.split("\\.");
         txtIP1.setText(tokens[0]);
         txtIP2.setText(tokens[1]);
         txtIP3.setText(tokens[2]);
         txtIP4.setText(tokens[3]);
         spinPort.setValue(Integer.valueOf(DatabaseConfig.getPort()));
      } catch (IOException ex) {
         PopupMessage.createErrorPopUp(ex.getMessage(), null);
      }
   }

   @Override
   public void setFocus() {
      this.btnBrowse.requestFocus();
   }

   private void setControlsEnabled(boolean b) {
      this.btnBrowse.setEnabled(b);
      this.btnBackup.setEnabled(b);
   }
}
