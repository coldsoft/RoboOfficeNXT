/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.robokids.robooffice.desktop.customSwing;

import ca.robokids.robooffice.desktop.loaders.FontsLoader;
import ca.robokids.robooffice.entity.schoolmetadata.Classroom;
import ca.robokids.robooffice.entity.student.CourseProgress;
import ca.robokids.robooffice.entity.student.MembershipProgress;
import ca.robokids.robooffice.entity.student.Progress;
import de.javasoft.swing.JYSwitchButton;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.List;
import javax.swing.border.TitledBorder;

/**
 *
 * @author Coldsoft
 */
public class ClassroomPanel extends javax.swing.JPanel {

   /**
    * Creates new form ClassroomPanel
    */
   Classroom classroom;
   List<Progress> progress;
   List<JYSwitchButton> buttons = new ArrayList();
   boolean defaultSelected;

   public ClassroomPanel(Classroom classroom, List<Progress> progress, boolean defaultSelected) {
      initComponents();
      this.defaultSelected = defaultSelected;
      setClassroom(classroom);
      setProgress(progress);

   }

   public Classroom getClassroom() {
      return classroom;
   }

   public void setClassroom(Classroom classroom) {
      this.classroom = classroom;
      if (classroom != null) {
         TitledBorder border = (TitledBorder) this.getBorder();
         border.setTitle(classroom.getName());
      }
   }

   public List<Progress> getProgress() {
      List<Progress> selected = new ArrayList();
      for (int i = 0; i < buttons.size(); i++)
      {
         if (buttons.get(i).isSelected())
         {
            selected.add(progress.get(i));
         }
      }
      
      return selected;
   }

   public void setProgress(List<Progress> progress) {
      this.progress = progress;
      this.classroomPanel.removeAll();
      this.buttons.clear();

      for (Progress p : progress) {
         if (p instanceof CourseProgress) {
            CourseProgress cp = (CourseProgress) p;
            String display = "<html>" + cp.getSection().getCourse().getCode() + "<br>" + cp.getStudent().toString() + "</html>";
            addButton(cp.getProgressID(),display);
         }
         if (p instanceof MembershipProgress){
            MembershipProgress mp = (MembershipProgress) p;
            String display = "<html>" + mp.getMembership().getCode() + "<br>" + mp.getStudent().toString() + "</html>";
            addButton(mp.getProgressID(),display);
         }
      }

   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        classroomPanel = new javax.swing.JPanel();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, FontsLoader.getTitleBorderFont()));
        setMaximumSize(new java.awt.Dimension(250, 400));
        setMinimumSize(new java.awt.Dimension(250, 400));
        setPreferredSize(new java.awt.Dimension(250, 400));
        setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setBorder(null);

        classroomPanel.setMaximumSize(new java.awt.Dimension(1000, 1000));
        classroomPanel.setLayout(new javax.swing.BoxLayout(classroomPanel, javax.swing.BoxLayout.PAGE_AXIS));
        jScrollPane1.setViewportView(classroomPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jScrollPane1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel classroomPanel;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

   private void addButton(int id, String text) {
      JYSwitchButton b = new JYSwitchButton();
      buttons.add(b);
      b.setOffFontStyle(1);
      b.setOffText("Absent");
      b.setOffFontSize(10);
      b.setOffForeground(new Color(255, 51, 51));
      b.setOnFontStyle(1);
      b.setOnFontSize(10);
      b.setOnText("HERE");
      b.setFont(FontsLoader.getDynamicLabelFont());
      b.setAlignmentY(Component.TOP_ALIGNMENT);
      b.setMinimumSize(new Dimension(250, 35));
      b.setPreferredSize(new Dimension(250, 35));
      b.setMaximumSize(new Dimension(250, 35));
      
      b.setText(text);
      b.setName(String.valueOf(id));
      b.setSelected(defaultSelected);
      
      this.classroomPanel.add(b);
   }
}
