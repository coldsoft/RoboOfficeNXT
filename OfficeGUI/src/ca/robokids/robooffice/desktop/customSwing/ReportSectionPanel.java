/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.robokids.robooffice.desktop.customSwing;

import ca.robokids.robooffice.desktop.loaders.FontsLoader;
import ca.robokids.robooffice.desktop.tabs.school.ProgressReportTypeTab;
import ca.robokids.robooffice.desktop.util.PopupMessage;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.border.TitledBorder;

/**
 *
 * @author Coldsoft
 */
public class ReportSectionPanel extends javax.swing.JPanel {

   /**
    * Creates new form ReportSectionPanel
    */
   private ProgressReportTypeTab parent;
   private DefaultListModel<String> observationModel = new DefaultListModel();
   private DefaultListModel<String> recommendationModel = new DefaultListModel();
   private List<String> observation;
   private List<String> recommendation;
   private List<String> criteria;
   private String section;
   private boolean editable;
   
   public ReportSectionPanel(ProgressReportTypeTab parent) {
      initComponents();
      this.parent = parent;
   }
   
   public void setData(String section, List<String> observation,
                           List<String> recommendation,
                           List<String> criteria)
   {
      this.section = section;
      if (observation != null)
         this.observation = observation;
      else
         this.observation = new ArrayList();
      if (observation != null)
         this.recommendation = recommendation;
      else
         this.recommendation = new ArrayList();
      
      this.criteria = criteria;
      
      populateFields();
   }

   public List<String> getCriteria() {
      if(!editable)
         return criteria;
      else
      {
         List<String> newCriteria = new ArrayList();
         newCriteria.add(txtCriteria1.getText().trim());
         newCriteria.add(txtCriteria2.getText().trim());
         newCriteria.add(txtCriteria3.getText().trim());
         criteria = newCriteria;         
         return newCriteria;
      }
   }

   public List<String> getObservation() {
      if (!editable)
         return observation;
      else
      {
         List<String> newObservation = new ArrayList();
         for (int i = 0; i < observationModel.size(); i++)
         {
            newObservation.add(observationModel.get(i));
         }
         observation = newObservation;
         return newObservation;
      }
   }

   public List<String> getRecommendation() {
      if (!editable)
         return recommendation;
      else
      {
         List<String> newRecommendation = new ArrayList();
         for (int i = 0; i < recommendationModel.size(); i++)
         {
            newRecommendation.add(recommendationModel.get(i));
         }
         recommendation = newRecommendation;
         return newRecommendation;
      }
   }

   public String getSection() {
      if (!editable)
         return section;
      else
         return txtSection.getText().trim();
   }
   
   public void setEditable(boolean edit)
   {
      editable = edit;
      if (edit)
      {
         switchTo("edit");
      }else
      {
         switchTo("display");
      }
   }


   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        display = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstObservation = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstRecommendation = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        lblCriteria1 = new javax.swing.JLabel();
        lblCriteria2 = new javax.swing.JLabel();
        lblCriteria3 = new javax.swing.JLabel();
        edit = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstObservation1 = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstRecommendation1 = new javax.swing.JList();
        txtCriteria1 = new javax.swing.JTextField();
        txtSection = new javax.swing.JTextField();
        txtCriteria2 = new javax.swing.JTextField();
        txtCriteria3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnAddObservation = new javax.swing.JButton();
        btnDeleteObservation = new javax.swing.JButton();
        btnAddRecommendation = new javax.swing.JButton();
        btnDeleteRecommendation = new javax.swing.JButton();

        setLayout(new java.awt.CardLayout());

        display.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, FontsLoader.getTitleBorderFont()));

        jLabel4.setFont(FontsLoader.getStaticLabelFont());
        jLabel4.setText("Strength/Weakness");

        jLabel5.setFont(FontsLoader.getStaticLabelFont());
        jLabel5.setText("Recommendation");

        lstObservation.setFont(FontsLoader.getListFont());
        lstObservation.setModel(this.observationModel);
        lstObservation.setEnabled(false);
        jScrollPane1.setViewportView(lstObservation);

        lstRecommendation.setFont(FontsLoader.getListFont());
        lstRecommendation.setModel(this.recommendationModel);
        lstRecommendation.setEnabled(false);
        jScrollPane2.setViewportView(lstRecommendation);

        jLabel6.setFont(FontsLoader.getStaticLabelFont());
        jLabel6.setText("Criterias:");

        lblCriteria1.setFont(FontsLoader.getDynamicLabelFont());
        lblCriteria1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCriteria1.setText("criteira1");

        lblCriteria2.setFont(FontsLoader.getDynamicLabelFont());
        lblCriteria2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCriteria2.setText("criteria2");

        lblCriteria3.setFont(FontsLoader.getDynamicLabelFont());
        lblCriteria3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCriteria3.setText("criteria3");

        javax.swing.GroupLayout displayLayout = new javax.swing.GroupLayout(display);
        display.setLayout(displayLayout);
        displayLayout.setHorizontalGroup(
            displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayLayout.createSequentialGroup()
                .addGroup(displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblCriteria1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                        .addComponent(lblCriteria2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblCriteria3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        displayLayout.setVerticalGroup(
            displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(displayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayLayout.createSequentialGroup()
                        .addComponent(lblCriteria1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCriteria2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCriteria3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        add(display, "display");

        jLabel7.setFont(FontsLoader.getStaticLabelFont());
        jLabel7.setText("Strength/Weakness");

        jLabel8.setFont(FontsLoader.getStaticLabelFont());
        jLabel8.setText("Recommendation");

        lstObservation1.setFont(FontsLoader.getListFont());
        lstObservation1.setModel(this.observationModel);
        jScrollPane3.setViewportView(lstObservation1);

        lstRecommendation1.setFont(FontsLoader.getListFont());
        lstRecommendation1.setModel(this.recommendationModel);
        jScrollPane4.setViewportView(lstRecommendation1);

        txtCriteria1.setFont(FontsLoader.getTextFieldFont());

        txtSection.setFont(FontsLoader.getTextFieldFont());

        txtCriteria2.setFont(FontsLoader.getTextFieldFont());

        txtCriteria3.setFont(FontsLoader.getTextFieldFont());

        jLabel1.setFont(FontsLoader.getStaticLabelFont());
        jLabel1.setText("Section name:");

        jLabel2.setFont(FontsLoader.getStaticLabelFont());
        jLabel2.setText("Criteria name:");

        btnAddObservation.setFont(FontsLoader.getButtonFont());
        btnAddObservation.setText("Add");
        btnAddObservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddObservationActionPerformed(evt);
            }
        });

        btnDeleteObservation.setFont(FontsLoader.getButtonFont());
        btnDeleteObservation.setForeground(new java.awt.Color(255, 0, 0));
        btnDeleteObservation.setText("Delete");
        btnDeleteObservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteObservationActionPerformed(evt);
            }
        });

        btnAddRecommendation.setFont(FontsLoader.getButtonFont());
        btnAddRecommendation.setText("Add");
        btnAddRecommendation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRecommendationActionPerformed(evt);
            }
        });

        btnDeleteRecommendation.setFont(FontsLoader.getButtonFont());
        btnDeleteRecommendation.setForeground(new java.awt.Color(255, 0, 0));
        btnDeleteRecommendation.setText("Delete");
        btnDeleteRecommendation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRecommendationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editLayout = new javax.swing.GroupLayout(edit);
        edit.setLayout(editLayout);
        editLayout.setHorizontalGroup(
            editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCriteria1)
                    .addComponent(txtCriteria2)
                    .addComponent(txtCriteria3, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(txtSection)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(editLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddObservation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteObservation)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddRecommendation)
                        .addGap(6, 6, 6)
                        .addComponent(btnDeleteRecommendation)))
                .addContainerGap())
        );
        editLayout.setVerticalGroup(
            editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editLayout.createSequentialGroup()
                .addGroup(editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddObservation, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAddRecommendation, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnDeleteRecommendation, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnDeleteObservation, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(editLayout.createSequentialGroup()
                        .addGroup(editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel1))
                            .addGroup(editLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(txtSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCriteria1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCriteria2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCriteria3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        add(edit, "edit");
    }// </editor-fold>//GEN-END:initComponents

   private void btnAddObservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddObservationActionPerformed
      String entry =  PopupMessage.createInput("Enter new sentence:", section + " Strength/Weakness");
      if (entry != null)
      {
         this.observationModel.addElement(entry);        
      }
   }//GEN-LAST:event_btnAddObservationActionPerformed

   private void btnAddRecommendationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRecommendationActionPerformed
      String entry =  PopupMessage.createInput("Enter new sentence:", section + " Recommendation");
      if (entry != null)
      {
         this.recommendationModel.addElement(entry);   
      }
   }//GEN-LAST:event_btnAddRecommendationActionPerformed

   private void btnDeleteObservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteObservationActionPerformed
      int index = lstObservation1.getSelectedIndex();
      if (index > -1)
      {
         observationModel.remove(index);
      }
   }//GEN-LAST:event_btnDeleteObservationActionPerformed

   private void btnDeleteRecommendationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRecommendationActionPerformed
      int index = lstRecommendation1.getSelectedIndex();
      if (index > -1)
      {
         recommendationModel.remove(index);
      }
   }//GEN-LAST:event_btnDeleteRecommendationActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddObservation;
    private javax.swing.JButton btnAddRecommendation;
    private javax.swing.JButton btnDeleteObservation;
    private javax.swing.JButton btnDeleteRecommendation;
    private javax.swing.JPanel display;
    private javax.swing.JPanel edit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblCriteria1;
    private javax.swing.JLabel lblCriteria2;
    private javax.swing.JLabel lblCriteria3;
    private javax.swing.JList lstObservation;
    private javax.swing.JList lstObservation1;
    private javax.swing.JList lstRecommendation;
    private javax.swing.JList lstRecommendation1;
    private javax.swing.JTextField txtCriteria1;
    private javax.swing.JTextField txtCriteria2;
    private javax.swing.JTextField txtCriteria3;
    private javax.swing.JTextField txtSection;
    // End of variables declaration//GEN-END:variables

   private void populateFields() {
      //Set section name for both cards
      TitledBorder border = (TitledBorder)this.display.getBorder();
      border.setTitle(section);
      txtSection.setText(section);
      
      //set criteria names
      lblCriteria1.setText(criteria.get(0));
      txtCriteria1.setText(criteria.get(0));
      lblCriteria2.setText(criteria.get(1));
      txtCriteria2.setText(criteria.get(1));
      lblCriteria3.setText(criteria.get(2));
      txtCriteria3.setText(criteria.get(2));
      
      //set observation model
      observationModel.clear();
      for(String s : observation)
      {
         observationModel.addElement(s);
      }
      //set recommendation model
      recommendationModel.clear();
      for(String s : recommendation)
      {
         recommendationModel.addElement(s);
      }
      
      
      
   }

   private void switchTo(String display) {
      CardLayout c = (CardLayout)this.getLayout();
      c.show(this,display);
   }
}
